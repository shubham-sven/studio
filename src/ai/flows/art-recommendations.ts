// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview AI-powered art recommendations based on user preferences.
 *
 * - recommendArt - A function that suggests artwork based on browsing history and preferences.
 * - ArtRecommendationsInput - The input type for the recommendArt function.
 * - ArtRecommendationsOutput - The return type for the recommendArt function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const ArtRecommendationsInputSchema = z.object({
  browsingHistory: z.array(
    z.object({
      artworkId: z.string().describe('The ID of the artwork.'),
      title: z.string().describe('The title of the artwork.'),
      category: z.string().describe('The category of the artwork.'),
    })
  ).describe('The user browsing history of artworks.'),
  preferences: z.string().describe('The user preferences for art.'),
});
export type ArtRecommendationsInput = z.infer<typeof ArtRecommendationsInputSchema>;

const ArtRecommendationsOutputSchema = z.array(
  z.object({
    artworkId: z.string().describe('The ID of the recommended artwork.'),
    title: z.string().describe('The title of the recommended artwork.'),
    artist: z.string().describe('The artist of the recommended artwork.'),
    category: z.string().describe('The category of the recommended artwork.'),
    description: z.string().describe('A short description of the artwork.'),
  })
).describe('A list of recommended artworks based on user history and preferences.');
export type ArtRecommendationsOutput = z.infer<typeof ArtRecommendationsOutputSchema>;

export async function recommendArt(input: ArtRecommendationsInput): Promise<ArtRecommendationsOutput> {
  return recommendArtFlow(input);
}

const recommendArtPrompt = ai.definePrompt({
  name: 'recommendArtPrompt',
  input: {schema: ArtRecommendationsInputSchema},
  output: {schema: ArtRecommendationsOutputSchema},
  prompt: `You are an art recommendation expert. Based on the user's browsing history and preferences, recommend artworks that they might be interested in.

Browsing History:
{{#each browsingHistory}}
- Artwork ID: {{artworkId}}, Title: {{title}}, Category: {{category}}
{{/each}}

Preferences: {{preferences}}

Ensure the recommendations are diverse and cover different styles and artists.
Return a JSON array of recommended artworks. Each artwork should include artworkId, title, artist, category and a short description.
`,
});

const recommendArtFlow = ai.defineFlow(
  {
    name: 'recommendArtFlow',
    inputSchema: ArtRecommendationsInputSchema,
    outputSchema: ArtRecommendationsOutputSchema,
  },
  async input => {
    const {output} = await recommendArtPrompt(input);
    return output!;
  }
);
